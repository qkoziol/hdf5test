1)  Edit the Makefile.

      You will probably have to define HDF5DIR
      to point to your installation of HDF5.
      The value assigned to HDF5DIR should be
      the name of the directory containing the
      directories bin, doc, include, and lib.
      The makefile has commented-out definitions
      for a number of ncsa machines and architectures.

2)  Edit config.h.

      Define the integer types used in struct timeval's
      tv_sec and tv_usec members in tv_sec_t and tv_usec_t,
      respectively.  Then define the max and min values
      that a tv_usec_t can hold.  Commented out definitions
      for a number of ncsa machines and architectures are
      in the file.

3)  make

      This should compile all the code and
      produce several binaries.  Only Gnu make
      has been used in development and testing.
      It is required.  The compilation should be
      clean - no warnings or errors.

4)  make test

      This should run some of the tests currently
      supported.  Many are intended just to test
      the test suite.

5)  ./test_dft_read_perf hdf5_file [hdf5_file ...]

      test_dft_read_perf expects to find the name
      of one or more hdf5 files on the command
      line.  It does a depth first traversal of
      each file starting at the root group, reads
      every dataset it finds on the way, and reports
      the bytes/second performance of that read.

      Invoked as shown above, without any file
      names, it prints a Usage: message.

      For a trivial example, try:

      ./test_dft_read_perf test_basic_io_perf.h5

      To generate the file `test_basic_io_perf.h5'
      run ./test_basic_io_perf.

      It works on all the .h5 files in the testfiles
      and testfiles2 directories of the hdf5-1.6.4
      distribution except testfiles/tfilters.h5.
      This file contains some datasets that require
      filters to read, and these filters may not be
      present.

6) make doc

      Uses doxygen to generate documentation from the
      source files.  The documentation is placed
      in ../doc/html.

7) make bin

      Currently makes 3 executables - h5read, h5dft_read,
      and h5write_matrix.  Execute each without arguments for
      usage (or read ../doc/guide.doc).  h5read is for measuring
      the performance of reading selected datasets.  h5dft_read is for
      measuring the performance of reading all datasets and attributes
      in an HDF5 file.  h5write_matrix is for measuring the
      performance of writing a matrix to a dataset.

